Задания
1. Запросите у пользователя число от 1 до 10. В зависимости от введенного числа
создайте массив, в котором число находится в середине, а влево и вправо уходят
убывающие последовательности. Например, если пользователь вводит число 3,
необходимо получить следующий массив [1, 2, 3, 2, 1], в случае числа 4:
[1, 2, 3, 4, 3, 2, 1] и т. п.
2. Пусть в переменной matrix задана квадратная матрица, например:
matrix = [
[1, 2, 3],
[4, 5, 6],
[7, 8, 9]
]
Следом называют сумму диагональных элементов. Для приведенного примера
искомое значение: 1 + 5 + 9 = 15. Разработайте метод, который вычисляет след
квадратной матрицы произвольного размера и содержания.
3. Пусть есть диапазон от 1 до 9: 1...10. Преобразуйте его в массив из трех под-
массивов [[1, 2, 3], [4, 5, 6], [7, 8, 9]].
4. Создайте собственный вариант итератора cycle, назвав его for. Откройте класс
Array и добейтесь, чтобы новый итератор был доступен для всех массивов:
[1, 2, 3].cycle { |x| puts x }
5. При помощи итератора reduce получите из массива [1, 2, 3, 4, 5] новый мас-
сив, содержащий только нечетные элементы: [1, 3, 5].
6. Расширьте класс Integer таким образом, чтобы числа отвечали на метод to_a. По
умолчанию метод должен переводить число в двоичное представление и воз-
вращать массив из нулей и единиц, представляющих десятичное число в двоич-
ном формате:
10.to_a # [1, 0, 1, 0]
Необязательный аргумент метода to_a должен задавать разрядность числа.
Например, для восьмеричных и шестнадцатеричных форматов метод должен
возвращать следующие массивы:
10.to_s(8) # [1, 2]
10.to_s(16) # ['a']